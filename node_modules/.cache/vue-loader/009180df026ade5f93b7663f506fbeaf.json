{"remainingRequest":"/home/runner/work/U1_Civil_y_Bienes/U1_Civil_y_Bienes/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U1_Civil_y_Bienes/U1_Civil_y_Bienes/node_modules/pug-plain-loader/index.js!/home/runner/work/U1_Civil_y_Bienes/U1_Civil_y_Bienes/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U1_Civil_y_Bienes/U1_Civil_y_Bienes/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Civil_y_Bienes/U1_Civil_y_Bienes/src/views/curso/Tema2.vue?vue&type=template&id=1e8f0b63&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Civil_y_Bienes/U1_Civil_y_Bienes/src/views/curso/Tema2.vue","mtime":1736401829332},{"path":"/home/runner/work/U1_Civil_y_Bienes/U1_Civil_y_Bienes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Civil_y_Bienes/U1_Civil_y_Bienes/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Civil_y_Bienes/U1_Civil_y_Bienes/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Civil_y_Bienes/U1_Civil_y_Bienes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Civil_y_Bienes/U1_Civil_y_Bienes/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}